name: Actions Workflow
# это способ записи триггеров в виде массива
# on: [push, pull_request]

# если нужно передать дополнительные параметры триггеру - используется объект
on:
  # https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows#repository_dispatch
  # триггер срабатывания запросу: можно отправить POST запрос на определенный роут
  # /repos/{owner}/{repo}/dispatches
  # https://api.github.com/repos/yudbox/GA-test/dispatches
  # в headers указать Accept - application/vnd.github.v3+json (в документации выше)
  # в headers указать Content-Type - application/json
  # указать Authorization имя и пароль, имя - это имя регистрации, пароль - это persoanl accesstoken в settings
  # body in json format {
  #     "event_type":"any_request_key",
  #     "client_payload": {
  #         "env":"production"
  #     }
  # }
  repository_dispatch:
    types: [any_request_key]

  # триггер срабатывания по графику
  # schedule:
  #   - cron: "0/5 * * * *"
  # https://crontab.guru/#*_*_*_*_* он лайн генератор
  # для триггера используется cron и интервал срабатывания каждые 5 мин

  # триггер срабатывания по пушу. push пустой обект
  # push:

  # триггер срабатывания по pull_request
  # pull_request объект с ключом types и в неп перечислены триггеры срабатывания
  # Activity types
  # https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows
  pull_request:
    types: [closed, assigned, opened, reopened]

jobs:
  run-github-actions:
    runs-on: ubuntu-latest
    steps:
      - name: manual trigering payload
        run: echo ${{ github.event.client_payload.env }}
      - name: List files
        run: |
          pwd
          ls -la
          echo $GITHUB_SHA
          # sha это id последнего коммита с которым запушили ветку на гитхаб
          # выведет f9d9f0b7ca89012d8acd20b9a739745aee8cd7b3

          echo $GITHUB_REPOSITORY
          # выведет yudbox/GA-test

          echo $GITHUB_WORKSPACE
          #  выведет/home/runner/work/GA-test/GA-test

          echo "${{ github.token }}"

          # git clone git@github:$GITHUB_REPOSITORY
          # git checkout $GITHUB_SHA
      - name: Checkout
        # action checkout копирует все файлы из репозитория в рабочую папку экшена
        # /home/runner/work/GA-test/GA-test
        uses: actions/checkout@v2.4.0

      - name: List files after checkout
        run: |
          pwd
          ls -la

      - name: Simple JS Action
        # id для шага по которому можно обратится вдругих шагах
        id: greet
        # сторонний скрипт который запускается со стороннего репозитория гитхаба
        # https://github.com/actions/hello-world-javascript-action
        uses: actions/hello-world-javascript-action@v1.1
        # так подключаются входяшие данные (input) описано в документации
        with:
          # ключ из документации для ввода данных в скрипт
          who-to-greet: "Alex"

      # второй шаг который обращается данным первого id = greet
      # outputs исходящие данные скрипта, time - ключ указаный в документации
      - name: Log Greeing Time
        run: echo "${{ steps.greet.outputs.time }}"
