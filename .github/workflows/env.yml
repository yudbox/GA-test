name: ENV Variables
on: [push]
env:
  WF_ENV: Avalible to all jobs
  # в yml файл можно передавать пепеменные с секретным содержанием, для этого
  # нужно зайти в settings GA-test репозитория, перейти во вкладку Secrets, нажать
  # new repository secrets и в имени указать SECRET_ENV, а в значении указать секретные данные
  # и в объекте secrets появится данная переменная
  SECRET_ENV: ${{ secrets.SECRET_ENV }}

jobs:
  create_issue:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      # https://docs.github.com/en/actions/security-guides/automatic-token-authentication
    steps:
      - name: Push random file
        run: |
          pwd
          ls -a
          git init
          git remote add origin "https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git"
          git config --global user.email "my-bot@bot.com"
          git config --global user.name "my-bot"
          git fetch
          git checkout master
          git branch --set-upstream-to=origin/master
          git pull
          ls -a
          echo $RANDOM >> random.txt
          ls -a
          git add .
          git commit -m "push random file"
          echo "11111111111111 passed"
          git push

      - name: Create issue using REST API
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
            }' \
          --fail
  log-env:
    runs-on: ubuntu-latest
    env:
      JOB_ENV: Avalible inside log-env job
    steps:
      - name: Log ENV Variables
        env:
          STEP_ENV: Avalible inside step only
        run: |
          echo "WF_ENV: ${WF_ENV}"
          echo "JOB_ENv: ${JOB_ENV}"
          echo "STEP_ENV: ${STEP_ENV}"
      - name: Log ENV 2
        run: |
          echo "WF_ENV: ${WF_ENV}"
          echo "JOB_ENV: ${JOB_ENV}"
          echo "STEP_ENV: ${STEP_ENV}"
  log-default-env:
    runs-on: ubuntu-latest
    steps:
      - name: Default ENV Variables
        run: |
          echo "HOME: ${HOME}"  #/home/runner
          echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}" # ENV Variables
          echo "GITHUB_ACTION: ${GITHUB_ACTION}" # __run
          echo "GITHUB_ACTIONS: ${GITHUB_ACTIONS}" # true
          echo "GITHUB_ACTOR: ${GITHUB_ACTOR}" # yudbox
          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}" # yudbox/GA-test
          echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}" # push
          echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}" # /home/runner/work/GA-test/GA-test
          echo "GITHUB_SHA: ${GITHUB_SHA}" # a3440e20e0dfdcba92887f6d3bfeb78a8f48d59
          echo "GITHUB_REF: ${GITHUB_REF}" # refs/heads/master
          echo "WF_ENV: ${WF_ENV}" # Avalible to all jobs
          echo "JOB_ENV: ${JOB_ENV}" # empty because another job
          echo "STEP_ENV: ${STEP_ENV}" # empty because another step
